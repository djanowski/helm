#!/usr/bin/env ruby

if ARGV.empty?
  puts <<-eos
    Available helm commands:
      # List tickets. The default filter
      # is "responsible:me state:open milestone:next".
      $ helm list [filter]

      # Display information about a particular ticket.
      $ helm info [ticket id]

      # Display information about a particular milestone.
      $ helm show [milestone id]

      # Assign a ticket to self.
      $ helm assign [ticket id]

      # Assign a ticket to another user.
      $ helm assign [ticket id] [user id]


      # Assign a ticket to a milestone.
      $ helm assign [ticket id] [milestone name]

      # Create a new ticket.
      $ echo "Ticket description" | helm create

    Check http://github.com/djanowski/helm/ for more information.
  eos
  exit
end

require 'rubygems'

gem 'soveran-drawer', '>= 0.0.5'
require 'drawer'

require File.join(File.dirname(__FILE__), '..', 'lib', 'helm')

def argv(key)
  start = "--#{key}="
  value = ARGV.detect { |v| v =~ /^#{Regexp.escape(start)}/ }
  value[start.size..-1] if value
end

def append_arguments(args)
  args.each do |k, v|
    ARGV << "--#{k}=#{v}" unless argv(k)
  end if args
end

def configure(file)
  puts <<-eos
    The configuration file #{file} doesn't exist.
    Please refer to the documentation to see what to
    write in that file.
  eos
  exit
end

custom_config = File.expand_path('.helm_config')
global_config = File.expand_path('~/.helm/config')

configure(custom_config) unless File.exists?(custom_config)
configure(global_config) unless File.exists?(global_config)

Drawer.open(custom_config) do |config|
  append_arguments(config.cache)
end

Drawer.open(global_config) do |config|
  append_arguments(config.get(argv(:url)))
end

Helm::Commands.const_get(ARGV.first.capitalize).new(Helm::Session.new).run
